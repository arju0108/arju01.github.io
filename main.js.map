{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/employform/employform.component.css","webpack:///./src/app/employform/employform.component.html","webpack:///./src/app/employform/employform.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;ACZyC;AACc;AAEvD,IAAM,MAAM,GAAW,EAAE,CAAC;AAM1B;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACT7B,+DAA+D,+H;;;;;;;;;;;ACA/D,yK;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,eAAe,CAAC;IAC1B,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACI;AACW;AACT;AACyB;AAexE;IAAA;IAAyB,CAAC;IAAb,SAAS;QAbrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,oFAAmB;aACpB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,oEAAgB;aACjB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACpBtB,+DAA+D,uJ;;;;;;;;;;;ACA/D,ujF;;;;;;;;;;;;;;;;;ACAkD;AAQlD;IAEE;IAAgB,CAAC;IAEjB,sCAAQ,GAAR;IACA,CAAC;IACC,0CAAY,GAAZ,UAAa,OAAe;QAC5B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IACD,iCAAG,GAAH,UAAI,CAAC;QAEH,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC;IAZQ,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,kHAA0C;;SAE3C,CAAC;;OACW,mBAAmB,CAkB/B;IAAD,0BAAC;CAAA;AAlB+B;;;;;;;;;;;;;ACRhC;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n \\n  <app-employform></app-employform>\\n\\n\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-forms';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { EmployformComponent } from './employform/employform.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmployformComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWZvcm0vZW1wbG95Zm9ybS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<div style=\\\"text-align:center\\\">\\n<div class=\\\"container\\\">\\n <b> <h1>Employee form</h1></b>\\n  <form #employeeform=\\\"ngForm\\\" (ngSubmit)=\\\"saveEmployee(employeeform)\\\">\\n    \\n      \\n    <div class=\\\"form-group\\\">\\n      \\n      <label\\n    for=\\\"name\\\">Name   </label>\\n        <input required id=\\\"name\\\" ngModel name=\\\"name\\\"   type=\\\"text\\\" size=\\\"50\\\"  \\n      class=\\\"form-control\\\" #nma=\\\"ngModel\\\" (change)=\\\"log(nma)\\\"> \\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"nma.touched && !nma.valid\\\">name is required</div>\\n  \\n    </div><br> \\n    <div class=\\\"form-group\\\">\\n      \\n      <label\\n      for=\\\"email\\\">email  </label>\\n      <input required id=\\\"email\\\" ngModel name=\\\"email\\\" type=\\\"email\\\" size=\\\"50\\\"\\n      class=\\\"form-control\\\" #ema=\\\"ngModel\\\" (change)=\\\"log(ema)\\\">\\n      <div classs=\\\"alert alert-danger\\\" *ngIf=\\\"ema.touched && !ema.valid\\\">email is required</div>\\n    </div><br>\\n\\n    <div class=\\\"form-group\\\">\\n      \\n        <label\\n        for=\\\"phno\\\">Phno  </label>\\n        <input required id=\\\"phno\\\" ngModel name=\\\"phno\\\" style=\\\"width: 29em\\\" type=\\\"number\\\" \\n        class=\\\"form-control\\\" #phn=\\\"ngModel\\\" (change)=\\\"log(phn)\\\">\\n        <div classs=\\\"alert alert-danger\\\" *ngIf=\\\"phn.touched && !phn.valid\\\">phone number is required</div>\\n      </div><br>\\n\\n    \\n    <div class=\\\"form-group\\\">\\n      <label\\n      for=\\\"password\\\">Password  </label>\\n      <input required  id=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\"  type=\\\"password\\\" size=\\\"50\\\"\\n      class=\\\"form-control\\\">\\n    </div><br>\\n\\n    <div class=\\\"form-group\\\">\\n      \\n        <label>Gender  </label>\\n        <div class=\\\"form-control\\\">\\n          <label class=\\\"radio-inline\\\">\\n            <input type=\\\"radio\\\" value=\\\"male\\\" name=\\\"gender\\\" [(ngModel)]=\\\"gender\\\">Male\\n          </label>\\n   \\n          <label class=\\\"radio-inline\\\">\\n             <input type=\\\"radio\\\" value=\\\"female\\\" name=\\\"gender\\\" [(ngModel)]=\\\"gender\\\">Female\\n           </label>\\n       </div>\\n       </div><br>\\n\\n       <div class=\\\"form-group\\\">\\n         \\n          <label\\n           for=\\\"department\\\">Department </label>\\n          \\n          <select id=\\\"department\\\" name=\\\"department\\\"\\n          [(ngModel)]=\\\"department\\\" class=\\\"form-control\\\">\\n        <option value=\\\"1\\\">HR</option>\\n        <option value=\\\"2\\\">IT</option>\\n        <option value=\\\"3\\\">PAROLL</option>\\n\\n        </select>\\n \\n       </div><br>\\n\\n       \\n   \\n    <button type=\\\"submit\\\"\\n    class=\\\"btn btn-\\n    success\\\">Submit</button>\\n\\n    \\n</form>\\n \\n\\n</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Employ} from '../employ';\nimport{ NgForm} from '@angular/forms';\n@Component({\n  selector: 'app-employform',\n  templateUrl: './employform.component.html',\n  styleUrls: ['./employform.component.css']\n})\nexport class EmployformComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n    saveEmployee(empform: NgForm): void {\n    console.log(empform.value);\n    }\n    log(x)\n    {\n      console.log(x);\n    }\n  \n\n  \n  \n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}